
###   Syntax  ###

# start with --- and end with ...

# identifier key after main header always has sign -  , like e.g.
# tasks:                            -------headers can be tasks, handlers, vars , etc.
#   - name:ANYTHING                   ------- "-" is used only for identifier key after main headers , evry name in tasks has "-" sign

#  host , user , become ,connection is mandetory for every playbook but remote_user also can be used 



#####################   gather facts from setup      #####################

---
   hosts: GRP_NAME
   user: USER         # inour case it is ansible , it can be root
# in this case USER is ansible 
   become: yes
   connection: ssh
   gather_facts: yes  # to display facts from setup

...

#####################   Install a package using action     #####################

---
- hosts: GRP_NAME        # use - for first heading
  user: ansible
  become: yes
  connection: ssh
  tasks:
    - name: TEXT_THAT_DESCRIBES_FOLLOWING_PROCESS
      action: yum name=httpd state=present    #state may be installed


#####################   Install a package and configure          #####################

---
- name: Update web servers
  hosts: webservers
  remote_user: root

  tasks:
  - name: Ensure apache is at the latest version
    ansible.builtin.yum:
      name: httpd
      state: latest
  - name: Write the apache config file
    ansible.builtin.template:
      src: /srv/httpd.j2
      dest: /etc/httpd.conf

#####################   Install a package and start only if installed using handlers     #####################

---
- hosts: GRP_NAME        # use - for first heading
  user: ansible
  become: yes
  connection: ssh

  tasks :
    - name: TEXT_THAT_DESCRIBES_FOLLOWING_PROCESS
      action: yum name=httpd state=present    
      notify: restart httpd     # we can use anything but mention same test for name of handler

  handlers:
    - name: restart httpd      # same name as notify , it will be executed only if any task notifies it
      action: service name=httpd state=restarted


#####################   Install a package with variable         #####################


---
- hosts: GRP_NAME        # use - for first heading
  user: ansible
  become: yes

  vars:
    package: httpd   # simple variable
    region:        # multiple values for 1 variable
      - northeast
      - southeast
      - midwest
    foo:            # dictionary variables
      field1: one
      field2: two

  tasks:
    - name: TEXT_THAT_DESCRIBES_FOLLOWING_PROCESS
      action: 
        - yum name="{{package}}" state=present    #state may be installed
        - echo '"{{ region[0] }}" is the best region' >> /tmp/region.txt
        - echo '"{{ foo.field1 }}" is same as "{{ foo['field1'] }}"' >> /tmp/region.txt


#####################   Install a package with loop         #####################
#   Dont use action for loop , use specific task name

---
- hosts: GRP_NAME        # use - for first heading
  user: ansible
  become: yes

  vars:
    list_of_packages: httpd

  tasks:  
# - name will be executed until loop values are exhausted , no integers are  defined for loops
    - name: Add several users
      ansible.builtin.user:
        name: "{{ item.name }}"    # item is by default used for calling values of loop
        state: present
        groups: "{{ item.groups }}"
      loop:
        - { name: 'testuser1', groups: 'wheel' }
        - { name: 'testuser2', groups: 'root' }

    - name: Optimal yum
      ansible.builtin.yum:
        name: "{{ item }}"
        state: present
      loop: 
        - httpd
        - nginx

    - name: creating users with loop
      user: name="{{ item }}" state=present
      with_items:         # using with items instead of loop
        - user1   # only single letter allowed , like user1 allowed but user 1 will throw error
        - user2
    

#############  Using When Condition  #############

---
- hosts: GRP_NAME        # use - for first heading
  user: ansible
  become: yes
  connection: ssh
  tasks:
    - name: TEXT_THAT_DESCRIBES_FOLLOWING_PROCESS
      action: yum name=httpd state=present   
      when: ansible_os_family == 'RedHat'
    - name: TEXT_THAT_DESCRIBES_FOLLOWING_PROCESS
      command: apt-get install apache2 -y
      when: ansible_os_family == 'Debian'
