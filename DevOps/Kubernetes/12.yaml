
---
apiVersion: v1
kind: Deployment
apiVersion: apps/v1
metadata:
   name: nginx
spec:
   replicas: 2
   selector:      # tells the controller which pods to watch/belong to
    matchLabels:
     name: deployment
   template:
     metadata:
       name: testpod1
       labels:
         name: deployment
     spec:
      containers:
        - name: c00
          image: nginx
          ports:
          - containerPort: 80
          env:
          - name: MY_POD_ID  
            valueFrom:
              fieldRef:
                fieldPath: metadata.name   
          # command: [ "bin/bash", "-c"]
          # args: 
          # - while true; do
          #     echo "<html> <head><title>POd</title></head><body><h1>Pod Id :</h1><h2>  $MY_POD_ID </h2> </body></html>" > /usr/share/nginx/html/index.html
          #     sleep 100000;
          #   done;
          
          # imagePullPolicy: never
          # command: [ "sh", "-c"]
          # args: ["cd /usr/share/nginx/html/" ,  'echo "<html> <head><title>POd</title></head><body><h1>Pod Id :</h1><h2>  $MY_POD_ID </h2> </body></html>" >> index.html']
          # args:
          # - while true; do
          #     cd /usr/share/nginx/html/
          #     echo "<html> <head><title>POd</title></head><body><h1>Pod Id :</h1><h2>  $MY_POD_ID </h2> </body></html>" > index.html
          #     sleep 1000;
          #   done;

---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-service
# spec:
#   selector:       
#     name: deployment
#   ports:
#     - protocol: TCP
#       port: 8080         #    listining  on 80 from usrs
#       targetPort: 80       # directing request to port 8080 of the pods having opend 8080


# apiVersion: v1
# kind: Service
# metadata:
#   name: example-service
# spec:
#   selector:
#     name: deployment
#   ports:
#     - port: 80
#       targetPort: 80
#   type: LoadBalancer

# apiVersion: v1
# kind: Service
# metadata:
#   name: my-service
# spec:
#   type: NodePort
#   selector:
#     name: nginx
#   ports:
#       # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
#     - port: 80
#       targetPort: 80
#       # Optional field
#       # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
#       nodePort: 30007

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: public   # If the ingressClassName is omitted, a default Ingress class should be defined using kind : IngressClass
  rules:
  - http:
      paths:
      - path: /mypath
        pathType: Prefix
        backend:                # backend can be Service  OR Resource
          service:
            name: mys2                # same as service name in service or any lable metadata
            port:
              number: 8080